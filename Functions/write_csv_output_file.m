if exist(out_file_path)
    fid=fopen(out_file_path,'a');
else
    % if output file for this deposit interval doesn't already exist, write
    % a new output file with headers
    fid = fopen(out_file_path, 'w');
    fprintf(fid, repmat('%s,', 1, 26), 'trench_id', 'min_depth_cm',...
        'max_depth_cm', 'param', 'model_name', 'date_time',...
        'root_square_error', 'run_time', 'iterations',...
        'phi_min', 'phi_max', 'deposit_thickness_m',...
        'flow_depth_m', 'N_size_classes', 'mean_grain_diameter_m',...
        'eddy_viscosity_profile', 'ustarc_mps', 'zo_tot', 'thload_m',...
        'predict_ss_load_m', 'max_speed_mps', 'avg_speed_mps',...
        'max_froude', 'avg_froude', 'total_Ca',...
        'depth_averaged_total_suspended_load');
    fprintf(fid,'\n');
end
% format strings for writing csv file
f_str1='%s,%4.2f,%4.2f,%.3e,%s,%s,%4.2f,%4.2f,%i,%4.2f,%4.2f,%4.3f,%4.2f,%i,%.3e,%s,%4.2f,%.3e,%4.3f,%4.3f,%5.2f,%5.2f,%4.2f,%4.2f,%.3e,%.3e,\n';
f_str2='%s,%4.2f,%4.2f,%.3e,%s,%s,%4.2f,,,,,,,,,,,,,,,,,,,,\n';

for i = 1:length(param)
    % write an output file, with one entry for each calculated RMS error
    for jj=0:length(modelOUT(1).gradOut.midint);
        if jj == 0
            % full interval results
            fprintf(fid, f_str1, SedSize.Tname, Drange(1), Drange(2), param(i),...
                inv_model_name, modelOUT(i).details.timestamp,...
                modelOUT(i).results.mean_RSE,...
                modelOUT(i).details.elapsed_time, modelOUT(i).details.iterations,...
                PHIrange(1), PHIrange(2),...
                modelOUT(i).siteInfo.depositThickness, modelOUT(i).siteInfo.depth,...
                modelOUT(i).details.n_sedsize_class, modelOUT(i).details.mean_grain_diameter_m,...
                modelOUT(i).details.eddy_viscosity_profile, modelOUT(i).results.ustrc,...
                modelOUT(i).results.zotot, modelOUT(i).results.thload,...
                modelOUT(i).results.predicted_ss_load, modelOUT(i).results.MaxSpeed,...
                modelOUT(i).results.AvgSpeed, modelOUT(i).results.MaxFroude,...
                modelOUT(i).results.AvgFroude, modelOUT(i).results.total_Ca,...
                modelOUT(i).results.depth_averaged_total_suspended_load);
        else
            % abridged results for sub-interval (individual samples)
            fprintf(fid, f_str2, SedSize.Tname, SedSize.mindepth(jj),...
                SedSize.maxdepth(jj), param(i), inv_model_name,...
                modelOUT(i).details.timestamp, modelOUT(i).results.RSE(jj));
        end
        
    end
    
end

% close output file
fclose(fid);